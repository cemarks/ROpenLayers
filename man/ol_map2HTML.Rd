% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_functions.R
\name{ol_map2HTML}
\alias{ol_map2HTML}
\title{Export OpenLayers Map to file.}
\usage{
ol_map2HTML(ol.map.obj, file.name, page.name = "ROpenLayers Map",
  width = NULL, height = NULL, ol.source.url = NULL,
  nga.olsource = FALSE, map.heading = NULL, map.note = NULL,
  nice.format = FALSE, IE.compatability.view = TRUE)
}
\arguments{
\item{ol.map.obj}{Ol.Map object to be exported.}

\item{file.name}{character output HTML file name.}

\item{page.name}{character page title to be included in the HTML head section.}

\item{width}{numeric or character CSS value width of map container.}

\item{height}{numeric or character CSS value height of map container.}

\item{ol.source.url}{character string containing the url to the OpenLayers
javascript library.  Ignored if nga.olsource is \code{TRUE}.}

\item{nga.olsource}{logical.  \code{TRUE} will use the OpenLayers 3.16.0 javascript
library from \url{http://home.gvs.nga.smil.mil/} (requires authentication);
\code{FALSE} uses the sources the \code{ol.source.url}, if provided, or embeds
the OpenLayers 5.3.0 JavaScript code in the HTML head.
Only used if \code{ol.source.url} is missing or \code{NULL}.}

\item{map.heading}{character heading to be placed over map in html h1 tag.}

\item{map.note}{character note placed in html paragraph (<p>) tag centered
under map container.}

\item{nice.format}{logical.  If \code{TRUE}, output file will be formated with
new lines and indentation for human readability.}

\item{IE.compatability.view}{logical.  If \code{TRUE}, the statement\cr
\code{<meta http-equiv="X-UA-Compatible" content="IE=edge"/>}\cr
to the HTML document head.  This statement is required for some browsers to 
render the map.}
}
\description{
Writes Ol.Map object to HTML file.
}
\details{
Ol.Map object is written to HTML file with embedded javascript.  The file
will include or source the OpenLayers javascript library as specified
in the Ol.Map object (see \code{\link{ol_map}}). 
The Javascript will call any REST APIs required for each layer in order to
produce an output file with supporting images, if required, that can
be placed directly into a directory hosted by a minimal http server.
}
\examples{
mymap <- ol_map()
base.layer <- lightgray()
mymap <- mymap + base.layer
\dontrun{
# The following writes HTML and needed images
ol_map2HTML(mymap,"SanDiego.html", nice.format=TRUE)
# Open in browser
browseURL("SanDiego.html")
}
}
\seealso{
\code{\link{ol_map}}, 
\code{\link{ol_map2Strings}},
}
