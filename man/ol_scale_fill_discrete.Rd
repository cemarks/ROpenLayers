% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scales.R
\name{ol_scale_fill_discrete}
\alias{ol_scale_fill_discrete}
\title{Fill Color Scale (Discrete)}
\usage{
ol_scale_fill_discrete(color.vector = NULL, name = NULL,
  na.col.val = "#FFFFFF00", ordered.values = NULL,
  ordinal.scale = FALSE, opacity = 1, preserve.opacity = FALSE,
  draw.lines = NULL, draw.color = "black", draw.lty = "solid",
  draw.lwd = 1, display = FALSE)
}
\arguments{
\item{color.vector}{character named vector of the form 
\code{c(value=color)}.  If \code{NULL}, a default color mapping
is assigned.}

\item{name}{character the scale name.}

\item{na.col.val}{character the color assigned to unrecognized or
NA values.}

\item{ordered.values}{character, numeric, or factor vector containing the 
ordered unique discrete variable values.  This input is used to determine
the order of the values appearing in the legend.  If not supplied, the 
order is taken from \code{names(color.vector)}.}

\item{ordinal.scale}{logical.  If \code{TRUE}, the colors in the legend
will not have spaces between them.}

\item{opacity}{numeric in [0,1]. The fill opacity, if not specified in
the \code{color.vector} colors.}

\item{preserve.opacity}{logical indicating whether to draw the legend
with the same opacity as the feature fills on the map.}

\item{draw.lines}{logical indicating whether to draw a border
around each color in the legend.  If \code{NULL}, a default is assigned
according to the type of layer containing the scale.}

\item{draw.color}{character color of the border in the legend.}

\item{draw.lty}{character indicating the border line type for the legend
only.  This will be passed to an R plot command.  See \code{\link{par}}.}

\item{draw.lwd}{numeric width of border only used in drawing the legend.}

\item{display}{logical indicating whether to draw the scale for output
in the HTML.  If \code{TRUE}, a bitmap will be created and sourced in 
the HTML in an \code{img} tag.  If \code{FALSE}, the \code{draw.*} 
inputs are ignored.}
}
\value{
list of class \code{Scale.Fill.Discrete}.
}
\description{
Specify a discrete fill color mapping scale.
}
\details{
This method maps OpenLayers feature fill colors to discrete 
variable values.  This scale can be added to an Ol.Map S3 object
only if the Ol.Map object has a layer with a "fill" mapping to a
numeric, character, or factor type variable.  If no such layer 
exists, attempts to add this type of scale will result in a warning.
The \code{color.vector} input enables the user to specify the exact 
mapping, assigning colors to specific variable values.
}
\examples{
polygon.matrix1 <- matrix(
    c(
        -80.385+c(0,0.05,0.05,0,0),
        25.782618+c(0,0,0.05,0.05,0)
    ),
    ncol=2
)
polygon.matrix2 <- matrix(
    c(
        -80.34+c(0,0.05,0.025,0),
        25.73++c(0,0,0.025*sqrt(3),0)
    ),
    ncol=2
)
polygon.list<-list(polygon.matrix1,polygon.matrix2)
polygon.df <- data.frame(shape=c("rectangle","triangle"),no=runif(2))
miami.OSM.basemap <- ol_map(
    center=c(-80.385790,25.782618),
    zoom=9
    ) + 
   streetmap() 
polygon.layer <- ol_geom_polygon(
    polygon.list,
    mapping=ol_aes(
        fill=shape #discrete mapping
    ),
    df=polygon.df,
    lwd=1,
    name="Miami Polygons",
    toggle.control=TRUE
)
polygon.fill.scale <- ol_scale_fill_discrete(
    color.vector=c(
        rectangle = 'red',
        triangle = 'blue'
    ),
    name = "Shape",
    opacity = 0.5,
    preserve.opacity = FALSE,
    display = TRUE
)
polygons.over.miami <- miami.OSM.basemap + 
    polygon.layer + 
    polygon.fill.scale

\dontrun{
# Output to file and view
ol_map2HTML(
  polygons.over.miami,
  'miami_polygons.html',
  map.heading="Miami Shapes",
  map.note="Note: Mouseover popup values are 
    independent of shape size &amp; color."
)
browseURL("miami_polygons.html")
}
}
\seealso{
\code{\link{ol_map}},
\code{\link{ol_geom_polygon}},
\code{\link{ol_geom_circle}}
}
