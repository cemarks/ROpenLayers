% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_functions.R
\name{ol_map2Strings}
\alias{ol_map2Strings}
\title{OpenLayers Map HTML to List}
\usage{
ol_map2Strings(ol.map.obj, image.path = "images",
  deployment.image.path = NULL)
}
\arguments{
\item{ol.map.obj}{Ol.Map object to be exported.}

\item{image.path}{character \emph{relative} path from \code{file.path} to 
directory that will contain page images.}

\item{deployment.image.path}{character path to images on server, if different
from \code{image.path}.  The \code{image.path} will be replaced with this 
path in the returned strings.}
}
\value{
list object with the following character elements:
\tabular{ll}{
$headscript \tab HTML script block sourcing the OpenLayers javascript library identify in \code{ol.map.obj}.\cr
$style \tab  CSS code for styling the map and legends. \cr
$body.html \tab HTML map and legend containers, and associated elements. \cr
$body.script \tab Javascript code writing the layer and map objects. \cr
}
}
\description{
Assigns Ol.Map HTML content to list.
}
\details{
Ol.Map object HTML is exported to a list object that can be deployed in a 
variety of applications or server environments.  See exmaples for a minimal
example using RShiny.  This method writes image files to the directory specified
in \code{image.path} if they are needed for any layers in \code{ol.map.obj}.  
This method does not currently support adding multiple maps to the same 
web page, as javascript variable names would be replicated.
}
\examples{
heatmap.pts <- matrix(
    c(
        rnorm(100,-80.385,1), #Miami Longitudes
        rnorm(100,-117.1611,3), #San Diego Longitudes
        rnorm(100,25.782618,1), #Miami Latitudes
        rnorm(100,32.7157,3) # San Diego Latitudes
    ),ncol=2
)
mymap <- ol_map(
    center=c(-98.5,28.5),
    zoom=4,
    map.note="Heatmap of random points centered on Miami and San Diego.") + 
    nga_basemap("WSM") +
    ol_geom_heatmap(
        heatmap.pts,
        name="Random Heatmap",
        toggle.control=TRUE,
        opacity=0.25
        )
## The following line will create image files
## as needed for point layers and legends.
## None are required in this example.
HTML.strings <- ol_map2Strings(mymap)
## Minimal shiny example
## Not Run
# library(shiny)
# ui <- shinyUI(
#     fluidPage(
#         ## Add OpenLayers Javascript source & CSS to head
#         tags$head(
#             HTML("<meta http-equiv=\\"X-UA-Compatible\\" content=\\"IE=edge\\"/>")
#             HTML(HTML.strings[[1]]),
#             tags$style(HTML(HTML.strings[[2]]))
#         ),
#         titlePanel("Random Heatmap"),
#         mainPanel(
#             tags$div(HTML(HTML.strings[[3]]))
#         ),
#         tags$script(HTML(HTML.strings[[4]]))
#     )
# )
# server <- function(input,output){
# }
# shinyApp(ui=ui,server)
}
\seealso{
\code{\link{ol_map}}, 
\code{\link{ol_map2HTML}},
}
